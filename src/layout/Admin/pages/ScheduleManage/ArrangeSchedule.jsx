import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import "./ScheduleManage.scss";
import { faXmark } from "@fortawesome/free-solid-svg-icons";
import { Button, Col, DatePicker, Form, Input, message, Row } from "antd";
import dayjs from "dayjs";
import { primaryColorAdmin } from "@/styles//variables";
import { arrangeSchedule } from "@/services/adminService";
import useSendNotification from "@/hooks/useSendNotification";
import { FRONTEND_URL } from "@/constant/environment";
const ArrangeSchedule = (props) => {
    let [form] = Form.useForm();
    let { handleSendNoti } = useSendNotification();

    let handleArrangeSchedule = () => {
        form.validateFields().then(async (values) => {
            let response = await arrangeSchedule(values);
            if (response.EC === 0) {
                message.success("X·∫øp l·ªãch th√†nh c√¥ng!");
                props.refresh();

                handleSendNoti(
                    `üìÜ Th√¥ng b√°o l·ªãch tr·ª±c`,
                    `<p>
                        <span style="color: rgb(234, 195, 148); font-weight: bold;">‚ú® L·ªãch tr·ª±c ‚ú®</span> 
                        ƒê√£ c√≥ th√¥ng tin v·ªÅ l·ªãch tr·ª±c m·ªõi! C√°c b√°c sƒ© xem th√¥ng tin v√† th·ª±c hi·ªán t·∫°i  
                        üëâ <a href="${FRONTEND_URL}/doctorSchedule" rel="noopener noreferrer" target="_blank" style="color: #007bff; font-weight: bold;">Xem l·ªãch tr·ª±c</a>
                    </p>`,
                    [],
                    false,
                    [...new Set(
                        response.DT.schedule
                            .map(item => item?.staffScheduleData?.staffUserData?.id)
                            .filter(id => id !== undefined)
                    )] // Ch·ªâ l·∫•y id c·ªßa ng∆∞·ªùi nh·∫≠n th√¥ng b√°o
                )
            } else {
                message.error(response.EM);
            }
        }).catch((err) => {
            console.log(err);
        });
    }
    return (
        <div className="insert-schedule-content px-3">
            <div className="content p-2">
                <div className="first d-flex justify-content-between align-items-center py-1">
                    <div className="text mt-2">X·∫øp l·ªãch tr·ª±c b·ªánh vi·ªán</div>
                    <FontAwesomeIcon className='icon'
                        onClick={() => { props.onClose() }}
                        icon={faXmark} size="xl" />
                </div>
                <div className="mt-3">
                    <Form
                        layout={'horizontal'}
                        form={form}
                        labelCol={{ span: 24, }}
                        wrapperCol={{ span: 24, }}
                        initialValues={{
                            startDate: dayjs(),
                            doctorNedeed: 1,
                            nurseNedeed: 1,
                        }}
                        style={{ maxWidth: "100%" }}
                    >
                        <Row >
                            <Col sm={12} >
                                <Form.Item
                                    name={"startDate"}
                                    label="NgaÃÄy bƒÉÃÅt ƒë√¢ÃÄu x√™ÃÅp liÃ£ch"
                                    rules={[{
                                        required: true,
                                        message: 'Vui ch·ªçn ng√†y b·∫Øt ƒë·∫ßu x·∫øp l·ªãch!',
                                    }]}>
                                    <DatePicker
                                        allowClear={false}
                                        minDate={dayjs()}
                                        placeholder="Ch·ªçn ng√†y b·∫Øt ƒë·∫ßu x·∫øp l·ªãch"
                                        format={'DD/MM/YYYY'} style={{ width: "60%" }}
                                    />
                                </Form.Item>
                            </Col>
                        </Row>
                        <Row gutter={[24, 8]}>
                            <Col sm={12}>
                                <Form.Item
                                    name={"doctorNedeed"}
                                    label="S·ªë l∆∞·ª£ng b√°c sƒ© cho m·ªói ph√≤ng tr·ª±c"
                                    rules={[{
                                        required: true,
                                        message: 'Vui l√≤ng nh·∫≠p s·ªë l∆∞·ª£ng!',
                                    },
                                    {
                                        pattern: /^[0-9]*$/g,
                                        message: 'Vui l√≤ng nh·∫≠p s·ªë!',
                                    },
                                    ]}>
                                    <Input placeholder="Nh·∫≠p s·ªë l∆∞·ª£ng b√°c sƒ©" min={1} />
                                </Form.Item>
                            </Col>
                            <Col sm={12} >
                                <Form.Item
                                    name="nurseNedeed"
                                    label="S·ªë l∆∞·ª£ng ƒëi·ªÅu d∆∞·ª°ng cho m·ªói ph√≤ng tr·ª±c"
                                    rules={[{
                                        required: true,
                                        message: 'Vui l√≤ng nh·∫≠p s·ªë l∆∞·ª£ng!',
                                    },
                                    {
                                        pattern: /^[0-9]*$/g,
                                        message: 'Vui l√≤ng nh·∫≠p s·ªë!',
                                    },
                                    ]}
                                >
                                    <Input placeholder="Nh·∫≠p s·ªë l∆∞·ª£ng ƒëi·ªÅu d∆∞·ª°ng" min={1} />
                                </Form.Item>
                            </Col>
                            <Col xs={24}>
                                <div className="flex flex-col text-start ">
                                    <div className="text-red-500 text-base font-bold">L∆∞u √Ω:</div>
                                    <div className="ps-2 text-secondaryText-tw">
                                        - Khi nh·∫•n <b>X·∫øp l·ªãch</b> s·∫Ω c·∫≠p nh·∫≠t l·ªãch tr·ª±c cho 30 ng√†y k·ªÉ t·ª´ ng√†y b·∫°n ch·ªçn b·∫Øt ƒë·∫ßu.
                                    </div>
                                    <div className="ps-2 text-secondaryText-tw">
                                        - Ng√†y b·∫Øt ƒë·∫ßu x·∫øp l·ªãch ph·∫£i l√† ng√†y hi·ªán t·∫°i ho·∫∑c sau ƒë√≥.
                                        Vi·ªác x·∫øp l·ªãch cho ng√†y ƒë√£ c√≥ l·ªãch tr·ª±c s·∫Ω c√≥ th·ªÉ x·∫£y ra l·ªói d·ªØ li·ªáu!</div>
                                    <div className="ps-2 text-secondaryText-tw">
                                        - S·ªë l∆∞·ª£ng b√°c sƒ© v√† ƒëi·ªÅu d∆∞·ª°ng c√≥ th·ªÉ kh√¥ng ƒë√°p ·ª©ng ƒë∆∞·ª£c s·ªë l∆∞·ª£ng b·∫°n nh·∫≠p. B·∫°n c√≥ th·ªÉ ƒëi·ªÅu ch·ªânh c·ª• th·ªÉ trong b·∫£ng l·ªãch tr·ª±c.
                                    </div>
                                </div>
                            </Col>
                            <Col xs={24} style={{ display: 'flex', justifyContent: 'flex-end' }} >
                                <Form.Item>
                                    <Button type="primary" htmlType="submit"
                                        style={{ background: primaryColorAdmin }}
                                        onClick={() => { handleArrangeSchedule() }}>X·∫øp l·ªãch</Button>
                                </Form.Item>
                            </Col>
                        </Row>

                    </Form>
                </div>
            </div>
        </div>
    );
}
export default ArrangeSchedule;